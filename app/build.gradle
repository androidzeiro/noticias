apply {
    plugin 'com.android.application'
    plugin 'kotlin-android'
    plugin 'kotlin-android-extensions'
    plugin "androidx.navigation.safeargs.kotlin"
    plugin 'kotlin-kapt'
}

sourceCompatibility = 1.8

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "br.com.raphael.noticias"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true

        testInstrumentationRunner "br.com.raphael.noticias.androidtest.TestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', BaseUrl
        }
        debug {
            applicationIdSuffix ".debug"
            buildConfigField 'String', 'BASE_URL', BaseUrl
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Androidx
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat"
    implementation "androidx.core:core-ktx:$rootProject.androidx_core"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.androidx_constraint"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.androidx_legacy"
    implementation "androidx.multidex:multidex:$rootProject.androidx_multidex"
    testImplementation "androidx.test:core:$rootProject.androidx_test"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidx_test_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.androidx_test_espresso"

    // Material Designer
    implementation "com.google.android.material:material:$rootProject.material"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.androidx_fragment"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.androidx_ui"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"

    // Gson
    implementation "com.google.code.gson:gson:$rootProject.gson"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"

    // OKHTTP3
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp"

    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$rootProject.anko"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.androidx_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.androidx_lifecycle"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutines"

    // Coil
    implementation "io.coil-kt:coil:$rootProject.coil"

    // Sweet Alert Dialog
    implementation "com.github.f0ris.sweetalert:library:$rootProject.sweet_alert"

    // Tests
    testImplementation "junit:junit:$rootProject.junit"
    testImplementation "androidx.test:core:$rootProject.android_test"
    testImplementation "com.google.truth:truth:$rootProject.truth"
    androidTestImplementation ("com.google.truth:truth:$rootProject.truth") {
        exclude group: "org.checkerframework", module: "checker-compat-qual"
        exclude group: "com.google.errorprone", module: "error_prone_annotations"
    }
    testImplementation "org.robolectric:robolectric:$rootProject.robolectric"

    // Mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockito"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockito_kotlin"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockito"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockito_kotlin"

    //Core Library
    androidTestImplementation "android.arch.core:core-testing:$rootProject.arch_core"
    testImplementation "android.arch.core:core-testing:$rootProject.arch_core"

    //JUnitRunner and JUnitRules
    androidTestImplementation "androidx.test:runner:$rootProject.android_test"
    androidTestImplementation "androidx.test:rules:$rootProject.android_test"

    //Assertions
    androidTestImplementation ("androidx.test.ext:truth:$rootProject.android_test") {
        exclude group: "com.google.truth", module: "truth"
    }
    androidTestImplementation "androidx.test.ext:junit:$rootProject.espresso_runner"
    androidTestImplementation "androidx.test:monitor:$rootProject.android_test"

    //Espresso
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$rootProject.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-web:$rootProject.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$rootProject.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espresso"

    debugImplementation "androidx.fragment:fragment-testing:$rootProject.android_fragment"

}
